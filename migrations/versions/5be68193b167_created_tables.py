"""Created tables

Revision ID: 5be68193b167
Revises: 
Create Date: 2025-05-21 10:22:13.581332

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5be68193b167'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('username', name='users_username_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('applicants',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('applicants_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('experience', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('qualification', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('is_kanaka_employee', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=True),
    sa.Column('applied_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('current_stage', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='applicants_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('interviews',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('applicant_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('interviewer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('round_number', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['applicant_id'], ['applicants.id'], name='interviews_applicant_id_fkey'),
    sa.ForeignKeyConstraint(['interviewer_id'], ['users.id'], name='interviews_interviewer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='interviews_pkey')
    )
    op.create_table('feedbacks',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('interview_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('comments', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('submitted_by', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['interview_id'], ['interviews.id'], name='feedbacks_interview_id_fkey'),
    sa.ForeignKeyConstraint(['submitted_by'], ['users.id'], name='feedbacks_submitted_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='feedbacks_pkey')
    )
    op.create_table('recruitment_history',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('applicant_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('stage', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('comments', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['applicant_id'], ['applicants.id'], name='fk_applicant', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='recruitment_history_pkey')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('recruitment_history')
    op.drop_table('feedbacks')
    op.drop_table('interviews')
    op.drop_table('applicants')
    op.drop_table('users')
    # ### end Alembic commands ###
